{"version":3,"file":"static/js/239.9fcaa0fa.chunk.js","mappings":"mTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD/B,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAOC,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACiBM,IAFT,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBG,EAAiB,mCAAG,WAAOC,GAAP,uFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,oBAAuCR,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBM,EAAc,mCAAG,WAAOD,GAAP,uFACLT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,KAAKO,MAFO,2CAAH,sDAKdC,EAAiB,mCAAG,WAAOH,GAAP,uFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,IADvC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qD,gFC3BjBQ,E,QAAaC,GAAAA,IAAH,gE,SCCVC,EAAmB,WAC9B,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAQ,GACRC,MAAO,GACPC,MAAM,UACNC,aAAc,CAAC,EACfC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAI7B,C,oLCjBYC,EAAcX,EAAAA,GAAAA,GAAH,yCAIXY,EAAaZ,EAAAA,GAAAA,GAAH,+EAMVa,EAAQb,EAAAA,GAAAA,EAAH,yFAMLc,EAAOd,EAAAA,GAAAA,EAAH,4CAIJe,EAAWf,EAAAA,GAAAA,EAAH,6D,SCmCrB,EA3CyB,WACvB,IAAQL,GAAYqB,EAAAA,EAAAA,MAAZrB,QACR,GAA8BsB,EAAAA,EAAAA,UAAoB,IAAlD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAkB,GAApD,eAAOG,EAAP,KAAkBC,EAAlB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gGAEID,GAAa,IACT1B,EAHR,iCAIyBG,EAAAA,EAAAA,IAAkBH,GAJ3C,OAIYL,EAJZ,OAKM6B,EAAW7B,GALjB,uDAQIiC,QAAQC,IAAR,MARJ,yBAUIH,GAAa,GAVjB,6EADc,uBAAC,WAAD,wBAedI,EACD,GAAE,CAAC9B,KAGF,2BACGyB,IAAa,SAACnB,EAAA,EAAD,IACbiB,EAAQQ,OAAS,IAChB,SAACf,EAAD,UACGO,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAAClB,EAAD,YACE,SAACC,EAAD,UAAQe,KACR,SAACd,EAAD,UAAOe,MAFQC,EADN,MAQG,IAAnBZ,EAAQQ,SAAiBN,IACxB,SAACL,EAAD,kDAIP,C","sources":["api.tsx","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","components/Reviews/Reviews.styled.ts","components/Reviews/Reviews.tsx"],"sourcesContent":["import axios from 'axios';\n\n// import { IMovie } from './types/movieType';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '2b7f816e736d5b5ccbfcea974c6e28fa';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByName = async (name: string) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${name}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async (movieId: string) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async (movieId: string) => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieId: string) => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  width: 60px;\n  margin: 0 auto 20px;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { LoaderWrap } from './Loader.styled';\n\nexport const Loader: React.FC = () => {\n  return (\n    <LoaderWrap>\n      <Oval\n        height={60}\n        width={60}\n        color=\"#008080\"\n        wrapperStyle={{}}\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#a6d3d3\"\n        strokeWidth={5}\n        strokeWidthSecondary={5}\n      />\n    </LoaderWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  padding: 8px;\n`;\n\nexport const ReviewItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Autor = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n`;\n\nexport const NotFound = styled.p`\n  font-size: 24px;\n  color: brown;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from '../../api';\nimport { Loader } from '../../components/Loader/Loader';\nimport {\n  ReviewItem,\n  ReviewsList,\n  Autor,\n  Text,\n  NotFound,\n} from './Reviews.styled';\n\nimport { IReview } from '../../types/movieReviewType';\n\nconst Review: React.FC = () => {\n  const { movieId } = useParams<string>();\n  const [reviews, setReviews] = useState<IReview[]>([]);\n  const [isLoading, setIsloading] = useState<Boolean>(false);\n\n  useEffect(() => {\n    async function fetchMovieReviewsList() {\n      try {\n        setIsloading(true);\n        if (movieId) {\n          const data = await fetchMovieReviews(movieId);\n          setReviews(data);\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsloading(false);\n      }\n    }\n\n    fetchMovieReviewsList();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviews.length > 1 && (\n        <ReviewsList>\n          {reviews.map(({ author, content, id }) => (\n            <ReviewItem key={id}>\n              <Autor>{author}</Autor>\n              <Text>{content}</Text>\n            </ReviewItem>\n          ))}\n        </ReviewsList>\n      )}\n      {reviews.length === 0 && !isLoading && (\n        <NotFound>Reviews have not been written yet</NotFound>\n      )}\n    </div>\n  );\n};\n\nexport default Review;\n"],"names":["axios","KEY","fetchTrendingMovies","response","data","results","fetchMoviesByName","name","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","LoaderWrap","styled","Loader","height","width","color","wrapperStyle","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","ReviewsList","ReviewItem","Autor","Text","NotFound","useParams","useState","reviews","setReviews","isLoading","setIsloading","useEffect","console","log","fetchMovieReviewsList","length","map","author","content","id"],"sourceRoot":""}